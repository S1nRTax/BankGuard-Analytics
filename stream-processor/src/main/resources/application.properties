# stream-processor/src/main/resources/application.properties

# Application Info
spring.application.name=stream-processor
server.port=8082

# Database Configuration
spring.datasource.url=${POSTGRES_URL:jdbc:postgresql://postgresql:5432/banking_analytics}
spring.datasource.username=${POSTGRES_USERNAME:banking_user}
spring.datasource.password=${POSTGRES_PASSWORD:banking_pass}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Kafka Configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:kafka:29092}
spring.kafka.streams.application-id=stream-processor
spring.kafka.streams.properties.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.properties.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.auto-startup=true
spring.kafka.streams.state-dir=/tmp/kafka-streams

# Consumer Configuration
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.group-id=stream-processor-group
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# JSON Deserializer Configuration
spring.kafka.consumer.properties.spring.json.trusted.packages=com.bankingplatform.transactiongenerator.model,com.bankingplatform.streamprocessor.model,java.util,java.lang
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.bankingplatform.streamprocessor.model.Transaction

# Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Redis Configuration
spring.redis.host=${REDIS_HOST:redis}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.password=${REDIS_PASSWORD:redis_pass}
spring.redis.timeout=2000ms
spring.redis.jedis.pool.max-active=8
spring.redis.jedis.pool.max-idle=8
spring.redis.jedis.pool.max-wait=-1ms
spring.redis.jedis.pool.min-idle=0

# Management endpoints
management.endpoints.web.exposure.include=health,info,metrics,prometheus,kafkastreamstopology
management.endpoint.health.show-details=always
management.metrics.export.prometheus.enabled=true

# Logging Configuration
logging.level.com.bankingplatform.streamprocessor=INFO
logging.level.org.apache.kafka.streams=INFO
logging.level.org.springframework.kafka=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.data.redis=DEBUG

# Jackson Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=Africa/Casablanca

# Fraud Detection Thresholds
fraud.detection.high-amount-threshold=10000.00
fraud.detection.frequent-transactions-threshold=10
fraud.detection.velocity-amount-threshold=20000.00
fraud.detection.high-risk-score-threshold=0.8